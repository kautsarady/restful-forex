package model

import (
	"database/sql"
	"time"
)

func getAvg(varr []float64) float64 {
	var sum float64
	for _, v := range varr {
		sum += v
	}
	return sum / float64(len(varr))
}

func getDateRange(date time.Time) []string {
	ts := []string{}
	for i := 1; i <= 7; i++ {
		ts = append(ts, date.Format("2006-01-02"))
		date = date.AddDate(0, 0, -1)
	}
	return ts
}

func repopulate(db *sql.DB, withDummy bool) error {
	if _, err := db.Exec(`CREATE TABLE IF NOT EXISTS public.history (
		"from" character varying(255),
		"to" character varying(255),
		rate real,
		date date
	);`); err != nil {
		return err
	}

	if withDummy {
		if _, err := db.Exec(`DELETE FROM history;`); err != nil {
			return err
		}
		if _, err := db.Exec(`INSERT INTO history VALUES 
	('USD',	'EUR',	1.12572205, '2018-11-13'),
	('EUR',	'USD',	0.888318777, '2018-11-13'),
	('USD',	'EUR',	1.12536383, '2018-11-12'),
	('EUR',	'USD',	0.888601542, '2018-11-12'),
	('USD',	'EUR',	1.1338098, '2018-11-11'),
	('EUR',	'USD',	0.881982148, '2018-11-11'),
	('USD',	'EUR',	1.13385797, '2018-11-10'),
	('EUR',	'USD',	0.881944656, '2018-11-10'),
	('USD',	'EUR',	1.1329962, '2018-11-09'),
	('EUR',	'USD',	0.882615507, '2018-11-09'),
	('USD',	'EUR',	1.14166224, '2018-11-08'),
	('EUR',	'USD',	0.875915766, '2018-11-08'),
	('USD',	'EUR',	1.14592671, '2018-11-07'),
	('EUR',	'USD',	0.872656167, '2018-11-07'),
	('USD',	'EUR',	1.14102411, '2018-11-06'),
	('EUR',	'USD',	0.876405656, '2018-11-06'),
	('USD',	'EUR',	1.13965881, '2018-11-05'),
	('EUR',	'USD',	0.877455592, '2018-11-05'),
	('GBP',	'SGD',	0.559746921, '2018-11-13'),
	('SGD',	'GBP',	1.78652167, '2018-11-13'),
	('GBP',	'SGD',	0.562431931, '2018-11-12'),
	('SGD',	'GBP',	1.77799308, '2018-11-12'),
	('GBP',	'SGD',	0.558969319, '2018-11-11'),
	('SGD',	'GBP',	1.78900695, '2018-11-11'),
	('GBP',	'SGD',	0.558919072, '2018-11-10'),
	('SGD',	'GBP',	1.78916788, '2018-11-10'),
	('GBP',	'SGD',	0.558700025, '2018-11-09'),
	('SGD',	'GBP',	1.78986931, '2018-11-09'),
	('GBP',	'SGD',	0.555655003, '2018-11-08'),
	('SGD',	'GBP',	1.79967785, '2018-11-08'),
	('GBP',	'SGD',	0.555393815, '2018-11-07'),
	('SGD',	'GBP',	1.80052412, '2018-11-07'),
	('GBP',	'SGD',	0.556415319, '2018-11-06'),
	('SGD',	'GBP',	1.7972188, '2018-11-06'),
	('JPY',	'USD',	113.941025, '2018-11-13'),
	('USD',	'JPY',	0.00877647009,	'2018-11-13'),
	('KRW',	'USD',	1277.86023,	'2018-11-13'),
	('USD',	'KRW',	0.000782558171,	'2018-11-13'),
	('KRW',	'USD',	1139.06384,	'2018-11-12'),
	('USD',	'KRW',	0.000877913961,	'2018-11-12'),
	('KRW',	'USD',	1129.69543,	'2018-11-11'),
	('USD',	'KRW',	0.000885194342,	'2018-11-11'),
	('KRW',	'USD',	1129.76587,	'2018-11-10'),
	('USD',	'KRW',	0.000885139103,	'2018-11-10'),
	('KRW',	'USD',	1131.29138,	'2018-11-09'),
	('USD',	'KRW',	0.000883945555,	'2018-11-09'),
	('KRW',	'USD',	1118.89514,	'2018-11-08'),
	('USD',	'KRW',	0.000893738761,	'2018-11-08'),
	('KRW',	'USD',	1117.86304,	'2018-11-07'),
	('USD',	'KRW',	0.000894563913,	'2018-11-07');`); err != nil {
			return err
		}
	}

	return nil
}
